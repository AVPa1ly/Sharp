Лаба включает в себя базу данных с 4 связными таблицами и рядом процедур, необходимых для извлечения, редактирования и добавления данных, а также непосредственно проги, мониторящей изменения в БД (в частности, добавление новых пользователей) и осуществляющей формирование и доставку xsd и xml в соответствующюю текущей дате папку на ftp-сервере с неймингом файлов.

База данных частично написана самостоятельно, частично нагло украдена из предлагаемого вами бэкапа (в частности, таблица национальностей). Таблицы связаны посредством ключей (поля NationalityID, CompanyID, CountryRegionCode, а также фактически незадействованный UserID под расширение БД). Процедуры предусматривают логику выбрасывания ошибок (например, при попытке добавления пользователя с уже существующим email-ом в InsertUser, как на видео в примере), изменения данных, объединение таблиц (GetUserInfo). К лабе прилагается бэкап текущего состояния БД дабы оценить старания)

Подключение к БД и FTP осуществляется посредством прасинга json конфиг-файла с помощью созданного в прошлой лабе класса Validator, слегка измененного под нужды текущей лабы (да, каюсь, не сделал этот класс полностью переносным). Изменения не прилагал, так как логика парсинга в целом не изменилась, изменился лишь порядок вытягивания данных из файла.

В начале программы формируется объект класса DataManager, отвечающий за отлавливание и обработку поступающих событий из БД, передачу необходимых данных другим модулям прогаммы, в которых заключена соответствующая логика. Запускает обработчик в отдельном потоке, дабы было удобно работать. Таймер замораживает поток на переданное значение ms. Больше особо сказать нечего.

Класс SqlWatcher обеспечивает соединение с БД по названию сервера и базы данных. Посредством передачи запросов с парметрами базе мониторит изменения в базе по текущему значению времени и упаковывает новые данные в массив object при обнаружении. Далее данные попадут на парсинг в другой класс.
!Для работы методов данного класса необходимо подключить Nuget-пакет System.Data.SqlClient 

Info -- класс-контейнер для распаковки данных из object-а, запакованного в SqlWatcher. Используется для передачи данных методу класса, формирующего xsd и xml-файлы.

XmlFormer -- логично, формирует xml (по данным, полученным в info) и xsd (по уже сформированной строке xml). Результаты возвращаются в виде строк, дабы удобно было записать на сервак в файл. Используются классы Serializer для xml и XmlSchema с Reader-ом для парсинга xml в xsd-схему.

Наконец, DataSender связывается с ftp-шкой по переданному адресу и логину/паролю (класс NetworkCredentials) для отправки сформированных строк в виде файлов. Кустарно-весёлым методом сначала осуществляется проверка путя (на каждую папку пути посылается FtpRequest с методом ListDirectory, который чекает список папок по текущему каталогу и, если при возврате списка папок внутри текущего каталога не выкинет ошибку, то данный каталог существует и т.д), при необходимости создаются нужные папки под год/месяц/дату. После чего создается имя файла по текущим данным времени + соответствующим расширением и засылается на сервак с помощью всё тех же FtpRequest.
